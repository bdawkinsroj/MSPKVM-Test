#!/bin/sh

. /etc/profile

# /boot/eth.nodhcp for example
# ipaddr/net        gw[optional]
# 192.168.0.101/24 192.168.0.1
# 192.168.3.116/22  

RESERVE_INET="192.168.0.1/24"

start() {
    printf "start ethernet: "
    if [ -e /boot/eth.nodhcp ] 
    then
        [ -e /boot/eth.nodhcp ] &&
            cat /boot/eth.nodhcp | while read inet gw
            do
                addr=${inet%/*}
                netid=${inet#*/}
                [ -z $gw ] &&
                gw=$( echo $addr| ( IFS='.' read a b c d; echo $((
                    (((((($a<<8)+$b)<<8)+$c)<<8)+$d)
                        & (((1<<$netid)-1)<<(32-$netid))
                    ))
                )) &&
                gw=$(($gw>>24&0xff)).$(($gw>>16&0xff)).$(($gw>>8&0xff)).$((1+( $gw>>0&0xff )))

                arping -Dqc2 -Ieth0 $addr || continue
                ip a add $inet brd + dev eth0
                ip r add default via $gw dev eth0
                cp -f /etc/resolv.conf /etc/resolv.conf.old
                cat > /etc/resolv.conf << EOF
nameserver $gw
nameserver 8.8.4.4
nameserver 8.8.8.8
nameserver 114.114.114.114
nameserver 119.29.29.29
nameserver 223.5.5.5
EOF
                break
            done &&
            ip a show dev eth0|grep inet || (
                udhcpc -i eth0 -t 3 -T 1 -A 5 -b -p /run/udhcpc.eth0.pid &>/dev/null
                ip a show dev eth0|grep inet
            ) || (
                # failed to apply dynamic addr, need a available static addr to visit the LAN 
                inet=$RESERVE_INET
                addr=${inet%/*}
                ip a add $inet brd + dev eth0
            ) || exit 1
    else
        (udhcpc -i eth0 -t 10 -T 1 -A 5 -b -p /run/udhcpc.eth0.pid) &
    fi

    echo "OK"
}
stop() {
    [[ ! -e "/run/udhcpc.eth0.pid" ]] && echo "udhcpc is not running..." && exit 1
    kill `cat /run/udhcpc.eth0.pid`
    rm /run/udhcpc.eth0.pid
}

case "$1" in
        start)
                start
                ;;
        stop)
                stop
                ;;
        restart|reload)
                $0 stop
                $0 start
                ;;
        doc)
                cat <<EOF
If you want to set your own static ip address
    rather then fetch it by dhcp.
Then you need to create a file \`/boot/eth.nodhcp\`,
    and edit it following the format below:
    \`addr/netid        gw[optional]\` in one line
    for example (support muti definations, checks with arp):
    1. 192.168.0.101/24 192.168.0.1
    2. 192.168.3.116/22
Delete this file if you change to use dhcp default.
ATTENTION: If all the STATIC address you set in the file is
    already in use on this LAN checked with arp, then none
    of them will be yours. And it will trigger dhcp, try to 
    fetch DYNAMIC one. If it's also failed, your address will 
    be the REVERSE one, 192.168.0.1/24. Just to be sure that
    you can visit your MSPKVM device through eth to fix some
    problems by ssh, unless you must disassemble it and modify
    or rewrite the TFCard once again.
EOF
                echo ""
                                ;;
        *)
                echo "Usage: $0 {start|stop|restart}"
                exit 1
esac
